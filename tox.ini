[tox]
minversion = 2.0
envlist = py27,pep8,pip-missing-reqs
skipsdist = True

[testenv]
usedevelop = True
# tox is silly... these need to be separated by a newline....
whitelist_externals = bash
                      find
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky} {opts} {packages}
# Note the hash seed is set to 0 until hyperv can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         OS_TEST_PATH=./compute_hyperv/tests/unit
         LANGUAGE=en_US
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       -egit+https://github.com/openstack/nova@stable/rocky#egg=nova
commands =
  find . -type f -name "*.pyc" -delete
  stestr run --slowest {posargs}
# there is also secret magic in pretty_tox.sh which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:pep8]
basepython = python3
commands =
  flake8 {posargs}

[testenv:cover]
basepython = python3
# Also do not run test_coverage_ext tests while gathering coverage as those
# tests conflict with coverage.
setenv =
    PYTHON=coverage run --source compute_hyperv --parallel-mode
commands =
    coverage erase
    stestr run '{posargs}'
    coverage combine
    coverage html --include='compute_hyperv/*' --omit='compute_hyperv/openstack/common/*' -d covhtml -i
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
commands =
  python setup.py build_sphinx
  bash -c '! find doc/ -type f -name *.json | xargs -t -n1 python -m json.tool 2>&1 > /dev/null | grep -B1 -v ^python'

[testenv:releasenotes]
basepython = python3
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
# E125 is deliberately excluded. See https://github.com/jcrocholl/pep8/issues/126
# The rest of the ignores are TODOs
# New from hacking 0.9: E129, E131, H407, H405
# E251 Skipped due to https://github.com/jcrocholl/pep8/issues/301

ignore = E121,E122,E123,E124,E125,E126,E127,E128,E129,E131,E251,H405
exclude =  .venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build,tools/xenserver*
# To get a list of functions that are more complex than 25, set max-complexity
# to 25 and run 'tox -epep8'.
# 37 is currently the most complex thing we have
# TODO(jogo): get this number down to 25 or so
max-complexity=38
# H904 Delay string interpolations at logging calls.
enable-extensions = H904

[hacking]
local-check-factory = compute_hyperv.hacking.checks.factory

[testenv:pip-missing-reqs]
basepython = python3
# do not install test-requirements as that will pollute the virtualenv for
# determining missing packages
# this also means that pip-missing-reqs must be installed separately, outside
# of the requirements.txt files
deps = pip_missing_reqs
       -rrequirements.txt
commands=pip-missing-reqs -d --ignore-file=compute_hyperv/tests/* compute_hyperv

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
  -egit+https://github.com/openstack/nova@stable/rocky#egg=nova
